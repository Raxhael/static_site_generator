from textnode import TextType, TextNode


def split_nodes_delimiter(old_nodes, delimiter, text_type):
    list = []
    if old_nodes is not TextType.TEXT:
        list.append(old_nodes)


    split_text = old_nodes.split(delimiter)
    new_node = []
    for index,item in enumerate(split_text):
        if index%2 == 0:
            new_node.append(TextNode(item),TextType.TEXT)
        else:
            new_node.append(TextNode(item), delimiter_choice(delimiter))
    return new_node   
    

#    if len(split_text)%2 == 0:
#        raise Exception("Delimiter not met with closing pair")
#    output = ([
#    TextNode(split_text[0],TextType.TEXT),
#    TextNode(split_text[1], delimiter_choice(delimiter)),
#    TextNode(split_text[2], TextType.TEXT),
#    ])
#    return output










def delimiter_choice(delimiter):
    if delimiter == "**":
        return TextType.BOLD
    if delimiter == "`":
        return TextType.CODE
    if delimiter == "_" or delimiter == "*":
        return TextType.ITALIC
    





testcase = "This is text with a **bolded phrase** in the middle"
split_nodes_delimiter(testcase, "**", TextType.TEXT)